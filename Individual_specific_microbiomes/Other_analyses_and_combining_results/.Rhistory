analyzed_fluxpaths$Description <- as.factor(analyzed_fluxpaths$Description)
#colnames(analyzed_metabolites) #print column names as needed
analyzed_fluxpaths <- subset(analyzed_fluxpaths, select = -c(...1, fluxpath_formula, fluxpath_subsystem))
#how many unique fluxes are we including here?
fluxpaths_unique <- unique(analyzed_fluxpaths$fluxpath_name) #this is not especially relevant for this code.
analyzed_fluxpaths$OTU_ID <- as.character(analyzed_fluxpaths$OTU_ID) #set otu_id as character for matching fuso_otu_id vector values
fuso_fluxpaths_only <- analyzed_fluxpaths[analyzed_fluxpaths$OTU_ID %in% fuso_otu_id, ] #filter to only include fuso OTU_ids
#fuso_fluxpaths_only <- filter(analyzed_fluxpaths, OTU_ID == fuso_otu_id) #this is for if there is only one fuso OTU_id
#wonderful
#to double check that the right number  of OTUs have been included, look at the number of fuso_otu_ids and compare to the following:
fuso_otus_unique <- unique(fuso_fluxpaths_only$OTU_ID)
#well, this is smaller than fuso_OTU_id, but it's possible some fuso_ids got filtered out. Let's see how far we get with this.
#eyyyyyy, don't need to filter out non-exchange reactions as this has already been done!
#how many fluxpaths do we have?
fuso_fluxpaths_unique <- unique(fuso_fluxpaths_only$fluxpath_name)
#########Step 3a: adding across OTU_ids
#because we have multiple fuso_ids in this dataset, we need to collapse these. I don't want to fuck around with multiple OTUs per sample
#here, we would like to sum all flux_values across OTU_ids, within fluxpath_name/sample_ID combos
#first, drop unnecessary columns (i.e. what we're adding across)
sum_fuso_fluxpaths <- subset(fuso_fluxpaths_only, select = -c(OTU_ID))
#create a new sorting column to get unique values for each Sample_ID/Fluxpath_name combo
sum_fuso_fluxpaths <- sum_fuso_fluxpaths %>%
mutate(sorting_col = paste0(Sample_ID, "_", fluxpath_name))
#Drop NAN values; converting to zeroes screws with averages
sum_fuso_fluxpaths_noNANs <- sum_fuso_fluxpaths[!is.na(sum_fuso_fluxpaths$flux_value),]
#then sum across sorting col:
sum_fuso_fluxpaths_noNANs_collapsed <- sum_fuso_fluxpaths_noNANs %>%        # Specify data frame
group_by(sorting_col, fluxpath_name, Sample_ID, fluxpath_description, Patient_Blind_ID, Description) %>%    # Specify group indicator (columns to keep)
summarise_at(vars(flux_value),                   # Specify column
list(sum_fluxpath_amount = sum)) %>% # Specify function
ungroup() #do this so select (dropping columns) can happen later
#nice. End up with a dataframe where each row is a unique subsystem/sample average of fluxes from pathways within that subsystem
#how many unique fluxes are we including here?
sum_fluxpaths_unique <- unique(sum_fuso_fluxpaths_noNANs_collapsed$fluxpath_name)
#rename for latter consistency in code
sum_fuso_fluxpaths_noNANs_collapsed <- sum_fuso_fluxpaths_noNANs_collapsed %>% rename(flux_value = sum_fluxpath_amount)
#########Step 4: collapsing by trace minerals: borrowed from 09.20.21_Burns2015_inputoutput_analysis_plus_traceminerals.R
#there are several metabolites (EX_ca2(e), EX_cobalt2(e), EX_cu2(e), EX_mg2(e), EX_mn2(e), EX_zn2(e), EX_k(e), EX_cl(e), EX_so4(e))
#which have identical fluxes in all communities. The goal is to collapse these into a single group, called "Trace minerals"
#first, create a vector of these metabolites
trace_minerals <- c("EX_ca2(e)", "EX_cobalt2(e)", "EX_cu2(e)", "EX_mg2(e)", "EX_mn2(e)", "EX_zn2(e)", "EX_k(e)", "EX_cl(e)", "EX_so4(e)")
#Figure out some way to count the number of trace minerals with nonzero values within each sample.
#As long as it's always 10 or 0, can collapse.
#first, create a dataframe that ONLY contains trace minerals
fuso_fluxpaths_trace_minerals_only <- sum_fuso_fluxpaths_noNANs_collapsed[sum_fuso_fluxpaths_noNANs_collapsed$fluxpath_name %in% trace_minerals, ]
#use dplyr to round to 6 significant digits.
fuso_fluxpaths_trace_minerals_only <- fuso_fluxpaths_trace_minerals_only %>%
mutate(flux_value=signif(flux_value, 6))
#then, create a filtering_DF that counts the number of unique values within each sample_ID_ish
trace_minerals_filtering_df <- fuso_fluxpaths_trace_minerals_only %>%  #create a new dataframe by filtering the old one
group_by(Sample_ID) %>% #group by the column of interest
summarize(n = n_distinct(flux_value)) #count the number of occurrences of each unique value in metabolite_amount and store as variable 'n'
#okay, now we have all 1s, with a few 3s. This is actually good. It means within each sample_ID_ish, there is only 1-3 unique
#metabolite_amounts. The differences are so small as to be ignore-able
#time to collapse! for each sample_ID_ish, only keep ONE of the rows where metabolite_names values are in the trace_minerals vector
#and rename metabolite_name to trace_mineral.
fuso_fluxpaths_collapsed <-data.frame(sum_fuso_fluxpaths_noNANs_collapsed) #copy the original dataframe
#first, rename "EX_cobalt2(e)" to "exchange of trace elements"
fuso_fluxpaths_collapsed$fluxpath_name[fuso_fluxpaths_collapsed$fluxpath_name== "EX_cobalt2(e)"] <- "Trace_elements_exchange"
fuso_fluxpaths_collapsed$fluxpath_description[fuso_fluxpaths_collapsed$fluxpath_description== "Co2+ exchange"] <- "Exchange of nine trace elements"
#then, remove all rows where trace_minerals vector values are in the metabolite_name column
fuso_fluxpaths_collapsed<- fuso_fluxpaths_collapsed[!(fuso_fluxpaths_collapsed$fluxpath_name %in% trace_minerals),]
#number of unique values
fuso_fluxpaths_collapsed_unique <- unique(fuso_fluxpaths_collapsed$fluxpath_name)
fuso_fluxpaths_wide <- select(fuso_fluxpaths_collapsed, -c(Sample_ID, sorting_col)) #drop unnecessary columns
#first, convert to wide form
fuso_fluxpaths_wide <- fuso_fluxpaths_wide %>%
spread(Description, flux_value)
#then, drop all rows where both tumor and normal values are nan.
fuso_fluxpaths_wide_noNANs <- fuso_fluxpaths_wide[!(is.na(fuso_fluxpaths_wide$tumor) & is.na(fuso_fluxpaths_wide$normal)),]
fuso_fluxpaths_noNANs_unique <- unique(fuso_fluxpaths_wide_noNANs$fluxpath_name) #count the number of metabolites
#replace remaining NA values with zeroes
fuso_fluxpaths_wide_noNANs$tumor[is.na(fuso_fluxpaths_wide_noNANs$tumor)] = 0
fuso_fluxpaths_wide_noNANs$normal[is.na(fuso_fluxpaths_wide_noNANs$normal)] = 0
#create a difference column
fuso_fluxpaths_wide_noNANs$difference <- (fuso_fluxpaths_wide_noNANs$tumor - fuso_fluxpaths_wide_noNANs$normal)
#remove any rows where differences are 0
fuso_fluxpaths_wide_noNANs_zerofree <- fuso_fluxpaths_wide_noNANs[(fuso_fluxpaths_wide_noNANs$difference !=0),]
#NOTE: for this dataset, a few rows are removed but no fluxpaths
#how many unique fluxes are we including here?
fuso_fluxpaths_zerofree_unique <- unique(fuso_fluxpaths_wide_noNANs_zerofree$fluxpath_name)
#cleanup
rm(fuso_fluxpaths_wide, fuso_fluxpaths_wide_noNANs)
num_fuso_pos_samples <- unique(fuso_fluxpaths_collapsed$Sample_ID) #74 samples, here
#first, create a filtering dataframe that contains counts of each fluxpath_name incidence in the dataframe
fuso_fluxpaths_filtering_df <- fuso_fluxpaths_wide_noNANs_zerofree %>%  #create a new dataframe by filtering the old one
mutate(count_of_nonzeros = rowSums(.[4:5]!=0)) %>% #create a new column, count_of_nonzeroes, that counts # nonzero values in tumor and normal columns
group_by(fluxpath_name) %>% #group by the column of interest
summarize(n = sum(count_of_nonzeros)) %>% #sums the count_of_nonzeros values within each fluxpath_subsystem and saves the value as n
mutate(n) #add n as a new column in the dataframe
#create a new dataframe that merges the old and new dataframes
fuso_fluxpaths_filter_added <- dplyr::inner_join(fuso_fluxpaths_wide_noNANs_zerofree, fuso_fluxpaths_filtering_df, by= "fluxpath_name")
#now, remove all rows where n (the name of the count column) is less than ...
fuso_fluxpaths_abundance_filtered <- filter(fuso_fluxpaths_filter_added, n >= 74)
#count number of unique metabolites left
fuso_fluxpaths_filtered_unique <- unique(fuso_fluxpaths_abundance_filtered$fluxpath_name)
#cleanup
rm(fuso_fluxpaths_filtering_df)
fuso_fluxpaths_paired_only <- select(fuso_fluxpaths_abundance_filtered, -c(difference, n, fluxpath_description))
#convert to long form
fuso_fluxpaths_paired_long <- reshape2::melt(data= fuso_fluxpaths_paired_only,
id.vars= c("Patient_Blind_ID", "fluxpath_name"),
variable.name = "Description",
value.name = "fluxpath_activity")
#split up by different subsystems and see where we get.
fuso_split_analyzed_fluxpaths_by_flux <- split(fuso_fluxpaths_paired_long,
with(fuso_fluxpaths_paired_long, interaction(fluxpath_name)), drop = TRUE)
fuso_by_flux_stats <- lapply(fuso_split_analyzed_fluxpaths_by_flux, function(df){wilcox.test(fluxpath_activity~Description, data=df, exact= FALSE, paired= TRUE)})
#make lists of p values
by_flux_pvals <- c() #initialize list
for (elem in fuso_by_flux_stats){
new_value = elem$p.value
by_flux_pvals <- c(by_flux_pvals, new_value)}
rm(new_value)
#make a list of q-values
by_flux_qvals <- p.adjust(by_flux_pvals, method = "fdr")
flux_ids <- c()
for(elem in fuso_split_analyzed_fluxpaths_by_flux){
new_value = elem$fluxpath_name[1]
flux_ids <- c(flux_ids, new_value)}
#merge all lists together.
fuso_fluxpath_statistics <- data.frame(flux_ids, by_flux_pvals, by_flux_qvals)
#clean up and remove extra variables
rm(elem, fuso_split_analyzed_fluxpaths_by_flux, by_flux_pvals, by_flux_qvals, flux_ids, new_value)
fuso_fluxpath_statistics <- fuso_fluxpath_statistics[order(fuso_fluxpath_statistics$by_flux_qvals),] #re-order by q-value
fuso_fluxpath_statistics <- fuso_fluxpath_statistics %>% rename("fluxpath_name"="flux_ids" )
#I would also like to add back the descriptions, please.
fluxpath_key <- subset(fuso_fluxpaths_collapsed, select = c(fluxpath_name, fluxpath_description) )
fluxpath_key <- fluxpath_key %>% distinct(fluxpath_name, .keep_all = TRUE)
fuso_fluxpath_statistics2 <- dplyr::inner_join(fuso_fluxpath_statistics, fluxpath_key, by= "fluxpath_name")
View(fuso_fluxpath_statistics2)
fuso_fluxpaths_filtered_unique <- unique(fuso_fluxpaths_abundance_filtered$fluxpath_name)
rm(list = ls()) #clear out environment as needed.
setwd("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Other_analyses_and_combining_results/")
Burns_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/
10.25.21_filtered_sum_exchange_fluxes_only_alldata_Burns2015_data.csv")
Burns_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/10.25.21_filtered_sum_exchange_fluxes_only_alldata_Burns2015_data.csv")
Burns_flux_data <- subset(Burns_flux_data, select=-c(X,...1))
Burns_fuso_flux_data <- Burns_flux_data[(Burns_flux_data$genus== "Fusobacterium"),]
View(Burns_flux_data)
Burns_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/10.25.21_filtered_sum_exchange_fluxes_only_alldata_Burns2015_data.csv")
View(Burns_flux_data)
Burns_flux_data <- subset(Burns_flux_data, select=-c(X))
View(Burns_fuso_flux_data)
Burns_succ_flux_data <- Burns_flux_data[(Burns_flux_data$fluxpath_name== "EX_succ(e)"),]
Burns_thr_flux_data <- Burns_flux_data[(Burns_flux_data$fluxpath_name== "EX_thr_L(e)"),]
View(Burns_succ_flux_data)
Burns_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/10.25.21_filtered_sum_exchange_fluxes_only_stats_Burns2015_data.csv")
View(Burns_flux_stats)
Burns_flux_stats <- subset(Burns_flux_stats, select=-c(X))
Burns_filtered_flux_stats <- Burns_flux_stats[(Burns_flux_stats$flux_ids==c("EX_succ(e)","EX_thr_L(e)")),]
View(Burns_filtered_flux_stats)
rm(Burns_flux_data, Burns_flux_stats)
rm(Burns_fuso_flux_data)
Hale_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Hale2018/10.26.21_filtered_median_exchange_fluxes_only_alldata_Hale2018_data.csv")
View(Hale_flux_data)
Hale_flux_data <- subset(Hale_flux_data, select=-c(X))
Hale_succ_flux_data <- Hale_flux_data[(Hale_flux_data$fluxpath_name== "EX_succ(e)"),]
Hale_thr_flux_data <- Hale_flux_data[(Hale_flux_data$fluxpath_name== "EX_thr_L(e)"),]
View(Hale_flux_data)
rm(list = ls()) #clear out environment as needed.
setwd("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Other_analyses_and_combining_results/")
rm(list = ls()) #clear out environment as needed.
setwd("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Other_analyses_and_combining_results/")
##########Importing data: FUSO SPECIFIC FLUXES
Burns_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/12.20.21_Fusobacterium_exchange_fluxes_only_alldata_Burns2015_data.csv")
Burns_flux_data <- subset(Burns_flux_data, select=-c(X))
View(Burns_flux_data)
Burns_val_flux_data <- Burns_flux_data[(Burns_flux_data$fluxpath_name== "EX_val_L(e)"),]
Burns_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/12.20.21_Fusobacterium_exchange_fluxes_only_stats_Burns2015_data.csv")
Burns_flux_stats <- subset(Burns_flux_stats, select=-c(X))
View(Burns_flux_stats)
Burns_filtered_flux_stats <- Burns_flux_stats[(Burns_flux_stats$flux_ids=="EX_val_L(e)"),]
View(Burns_filtered_flux_stats)
View(Burns_flux_stats)
Burns_filtered_flux_stats <- Burns_flux_stats[(Burns_flux_stats$fluxpath_name=="EX_val_L(e)"),]
rm(Burns_flux_data, Burns_flux_stats)
Hale_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Hale2018/12.21.21_Fusobacterium_exchange_fluxes_only_alldata_Hale2018_data.csv")
Hale_flux_data <- subset(Hale_flux_data, select=-c(X))
View(Hale_flux_data)
Hale_val_flux_data <- Hale_flux_data[(Hale_flux_data$fluxpath_name== "EX_val_L(e)"),]
Hale_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Hale2018/12.21.21_Fusobacterium_exchange_fluxes_only_stats_Hale2018_data.csv")
Hale_flux_stats <- subset(Hale_flux_stats, select=-c(X))
Hale_fuso_flux_stats <- Hale_flux_stats[(Hale_flux_stats$fluxpath_name=="EX_val_L(e)"),]
rm(Hale_flux_data, Hale_flux_stats)
Niccolai_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Niccolai2020/12.21.21_Fusobacterium_exchange_fluxes_only_alldata_Niccolai2020_data.csv")
Niccolai_flux_data <- subset(Niccolai_flux_data, select=-c(X,))
Niccolai_val_flux_data <- Niccolai_flux_data[(Niccolai_flux_data$fluxpath_name== "EX_val_L(e)"),]
Niccolai_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Niccolai2020/12.21.21_Fusobacterium_exchange_fluxes_only_stats_Niccolai2020_data.csv")
Niccolai_flux_stats <- subset(Niccolai_flux_stats, select=-c(X))
Niccolai_fuso_flux_stats <- Niccolai_flux_stats[(Niccolai_flux_stats$fluxpath_name=="EX_val_L(e)"),]
rm(Niccolai_flux_data, Niccolai_flux_stats)
View(Burns_val_flux_data)
View(Burns_filtered_flux_stats)
Burns_flux_graph <- ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(0,0.3)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
Burns_flux_graph
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(0,0.3)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-10,10)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-1,1)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-100,100)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-1000,1000)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-500,500)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
View(Hale_fuso_flux_stats)
ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-500,500)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(0,250)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(0,300)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-10,300)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-10,200)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
View(Niccolai_val_flux_data)
View(Niccolai_fuso_flux_stats)
ggpaired(Niccolai_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Niccolai2020 data"), subtitle = expression("paired Wilcoxan, p=0.00182, q= 0.0697")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-10,200)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Niccolai_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Niccolai2020 data"), subtitle = expression("paired Wilcoxan, p=0.00182, q= 0.0697")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-100,500)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
ggpaired(Niccolai_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Niccolai2020 data"), subtitle = expression("paired Wilcoxan, p=0.00182, q= 0.0697")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-200,600)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
Burns_flux_graph <- ggpaired(Burns_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Burns2015 data"), subtitle = expression("paired Wilcoxan, p=0.010, q= 0.0626")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-500,500)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
#Hale
Hale_flux_graph <- ggpaired(Hale_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Hale2018 data"), subtitle = expression("paired Wilcoxan, p=0.0752, q= 0.301")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-10,200)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
#Niccolai
Niccolai_flux_graph <- ggpaired(Niccolai_val_flux_data, cond1= "normal", cond2= "tumor",
y= "growth_rate", fill = "condition", line.color = "Difference_direction") +
labs(title = expression("Fusobacterium valine exchange, Niccolai2020 data"), subtitle = expression("paired Wilcoxan, p=0.00182, q= 0.0697")) +
theme(plot.title = element_text(hjust=0.5), plot.subtitle= element_text(hjust=0.5)) +
scale_y_continuous(name = "Exchange flux,\nmmol/(gDW * h)", limits=c(-200,600)) +
scale_x_discrete(labels = c('Normal','Tumor')) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
theme(legend.position = "bottom", legend.title=element_blank(), legend.text=element_text(size=11)) +
guides(fill="none")
all_flux_fig <- ggarrange(Burns_flux_graph, Hale_flux_graph, Niccolai_flux_graph,
labels = c("D.", "E.", "F."),
ncol = 3, nrow = 1)
all_flux_fig
library(VennDiagram)
install.packages("VennDiagram")
library(VennDiagram)
View(Burns_val_flux_data)
Burns_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/12.20.21_Fusobacterium_exchange_fluxes_only_alldata_Burns2015_data.csv")
Burns_flux_data <- subset(Burns_flux_data, select=-c(X))
Hale_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Hale2018/12.21.21_Fusobacterium_exchange_fluxes_only_alldata_Hale2018_data.csv")
Hale_flux_data <- subset(Hale_flux_data, select=-c(X))
Niccolai_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Niccolai2020/12.21.21_Fusobacterium_exchange_fluxes_only_alldata_Niccolai2020_data.csv")
Niccolai_flux_data <- subset(Niccolai_flux_data, select=-c(X,))
View(Burns_flux_data)
View(Hale_flux_data)
Burns_flux_data <- Burns_flux_data %>%
mutate(dataset= "Burns")
Hale_flux_data <- Hale_flux_data %>% mutate(dataset= "Hale")
Niccolai_flux_data <- Niccolai_flux_data %>% mutate(dataset= "Niccolai")
merged_flux_data <-rbind(Burns_flux_data, Hale_flux_data, Niccolai_flux_data)
View(Burns_flux_data)
View(Hale_flux_data)
View(Niccolai_flux_data)
Niccolai_flux_data <- subset(Niccolai_flux_data, select=-c(X,))
Niccolai_flux_data <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Niccolai2020/12.21.21_Fusobacterium_exchange_fluxes_only_alldata_Niccolai2020_data.csv")
Niccolai_flux_data <- subset(Niccolai_flux_data, select=-c(X,))
Niccolai_flux_data <- subset(Niccolai_flux_data, select=-c(X))
Niccolai_flux_data <- Niccolai_flux_data %>% mutate(dataset= "Niccolai")
merged_flux_data <-rbind(Burns_flux_data, Hale_flux_data, Niccolai_flux_data)
Burns_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Burns2015/12.20.21_Fusobacterium_exchange_fluxes_only_stats_Burns2015_data.csv")
Burns_flux_stats <- subset(Burns_flux_stats, select=-c(X))
Hale_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Hale2018/12.21.21_Fusobacterium_exchange_fluxes_only_stats_Hale2018_data.csv")
Hale_flux_stats <- subset(Hale_flux_stats, select=-c(X))
Niccolai_flux_stats <- read.csv("/Users/adamo010/Documents/MICOM_CRC_FBA/Individual_specific_microbiomes/Analyzing_MICOM_communities_Niccolai2020/12.21.21_Fusobacterium_exchange_fluxes_only_stats_Niccolai2020_data.csv")
Niccolai_flux_stats <- subset(Niccolai_flux_stats, select=-c(X))
View(Burns_flux_stats)
View(Niccolai_flux_stats)
View(Burns_flux_stats)
Burns_flux_stats <- Burns_flux_stats[order(by_flux_qvals),]
Burns_flux_stats_top20 <- Burns_flux_stats %>% bottom_n(20, by_flux_qvals)
Burns_flux_stats_top20 <- Burns_flux_stats %>% top_n(20, by_flux_qvals)
View(Burns_flux_stats_top20)
Burns_flux_stats_top20 <- Burns_flux_stats %>% top_n(-20, by_flux_qvals)
View(Burns_flux_stats_top20)
Burns_flux_stats_top20 <- Burns_flux_stats %>% top_n(-20, by_flux_pvals)
View(Burns_flux_stats_top20)
Hale_flux_stats_top20 <- Hale_flux_stats %>% top_n(-20, by_flux_pvals)
View(all_flux_fig)
Niccolai_flux_stats_top20 <- Niccolai_flux_stats %>% top_n(-20, by_flux_pvals)
Burns_flux_stats_top20 <- Burns_flux_stats_top20 %>% mutate(dataset= "Burns")
Hale_flux_stats_top20 <- Hale_flux_stats_top20 %>% mutate(dataset= "Hale")
Niccolai_flux_stats_top20 <- Niccolai_flux_stats_top20 %>% mutate(dataset= "Niccolai")
merged_flux_stats <-rbind(Burns_flux_stats_top20, Hale_flux_stats_top20, Niccolai_flux_stats_top20)
View(merged_flux_stats)
venn.diagram(
x = list(
merged_flux_stats %>% filter(dataset= "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset= "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset= "Niccolai") %>% select(fluxpath_description) %>% unlist()
),
category.names = c("Burns 2015" , "Hale 2018" , "Niccolai 2020"),)
venn.diagram(
x = list(
merged_flux_stats %>% filter(dataset= "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset= "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset= "Niccolai") %>% select(fluxpath_description) %>% unlist())
)
if (!require(devtools)) install.packages("devtools")
devtools::install_github("gaospecial/ggVennDiagram")
library(ggVennDiagram)
ggVennDiagram(merged_flux_stats)
ggVennDiagram(x = list(
merged_flux_stats %>% filter(dataset= "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset= "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset= "Niccolai") %>% select(fluxpath_description) %>% unlist(),)
)
ggVennDiagram(x = list(
merged_flux_stats %>% filter(dataset== "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset== "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset== "Niccolai") %>% select(fluxpath_description) %>% unlist(),))
set.seed(20190708)
genes <- paste("gene",1:1000,sep="")
x <- list(
A = sample(genes,300),
B = sample(genes,525),
C = sample(genes,440),
D = sample(genes,350)
)
View(x)
fluxpath_list <- list(
merged_flux_stats %>% filter(dataset= "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset= "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset= "Niccolai") %>% select(fluxpath_description) %>% unlist() ,)
fluxpath_list <- list(
merged_flux_stats %>% filter(dataset== "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(adataset== "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset== "Niccolai") %>% select(fluxpath_description) %>% unlist() ,)
fluxpath_list <- list(
merged_flux_stats %>% filter(dataset== "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset== "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats %>% filter(dataset== "Niccolai") %>% select(fluxpath_description) %>% unlist() ,)
View(merged_flux_stats)
View(merged_flux_stats)
merged_flux_stats_minimal <- subset(merged_flux_stats, select=-c("fluxpath_name", "by_flux_pvals", "by_flux_qvals"))
merged_flux_stats_minimal <- subset(merged_flux_stats, select=-c(fluxpath_name, by_flux_pvals, by_flux_qvals))
View(merged_flux_stats_minimal)
fluxpath_list <- list(
merged_flux_stats_minimal %>% filter(dataset== "Burns") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats_minimal %>% filter(dataset== "Hale") %>% select(fluxpath_description) %>% unlist() ,
merged_flux_stats_minimal %>% filter(dataset== "Niccolai") %>% select(fluxpath_description) %>% unlist() ,)
fluxpath_list <- list(
merged_flux_stats_minimal %>% filter(dataset== "Burns") %>% select(fluxpath_description),
merged_flux_stats_minimal %>% filter(dataset== "Hale") %>% select(fluxpath_description),
merged_flux_stats_minimal %>% filter(dataset== "Niccolai") %>% select(fluxpath_description),)
merged_flux_stats_counts <- aggregate(dataset ~ fluxpath_description, data= merged_flux_stats_minimal, paste, collapse="_" )
View(merged_flux_stats_counts)
merged_flux_stats_counts2 <- table(merged_flux_stats_counts$dataset)
merged_flux_stats_counts2
fluxpath_list2 <- list(
merged_flux_stats_counts %>% filter(dataset) %>% select(fluxpath_description))
flux_list=as.list(merged_flux_stats_counts)
View(flux_list)
flux_list=as.list(merged_flux_stats_counts.T)
flux_list=as.list(t(merged_flux_stats_counts))
View(flux_list)
merged_flux_stats_counts_t <- transpose(merged_flux_stats_counts)
rownames(merged_flux_stats_counts_t) <- colnames(merged_flux_stats_counts)
colnames(merged_flux_stats_counts_t) <- rownames(merged_flux_stats_counts)
View(merged_flux_stats_counts_t)
flux_list=as.list(merged_flux_stats_counts_t)
View(flux_list)
